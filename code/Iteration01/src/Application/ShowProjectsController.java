package Application;import Application.IncorrectPermissionException;import Application.Session;import Domain.ProjectNotFoundException;import Domain.Role;import Domain.TaskManSystem;import Domain.TaskNotFoundException;import java.util.Map;public class ShowProjectsController {  private final Session session;  private final TaskManSystem taskManSystem;  private Session getSession() {    return session;  }  private TaskManSystem getTaskManSystem() {    return taskManSystem;  }  public ShowProjectsController(Session session, TaskManSystem taskManSystem) {    this.session = session;    this.taskManSystem = taskManSystem;  }  public boolean showProjectsPreconditions() {    return getSession().getRole() == Role.PROJECTMANAGER;  }  /**   * Creates a string containing detailed information about the project with given projectName   *   * @param projectName Name of project given by the user   * @return String containing detailed information about the given project   * @throws IncorrectPermissionException if user is not logged in as project manager   * @throws ProjectNotFoundException if given project name does not correspond to an existing project   */  public String showProject(String projectName) throws IncorrectPermissionException, ProjectNotFoundException {    if (getSession().getRole() != Role.PROJECTMANAGER) {      throw new IncorrectPermissionException("You must be logged in with the " + Role.PROJECTMANAGER + " role to call this function");    }    return getTaskManSystem().showProject(projectName);  }  /**   * Creates a string containing detailed information about the task with given taskName, belonging to the project with   * given projectName   *   * @param projectName Name of project given by the user   * @param taskName Name of task given by the user   * @return String containing detailed information about the given project   * @throws IncorrectPermissionException if user is not logged in as project manager   * @throws ProjectNotFoundException if given project name does not correspond to an existing project   * @throws TaskNotFoundException if the given task does not correspond to an existing task belonging to the given project   */  public String showTask(String projectName, String taskName) throws IncorrectPermissionException, ProjectNotFoundException, TaskNotFoundException {    if (getSession().getRole() != Role.PROJECTMANAGER) {      throw new IncorrectPermissionException("You must be logged in with the " + Role.PROJECTMANAGER + " role to call this function");    }    return getTaskManSystem().showTask(projectName, taskName);  }  /**   * Gives a list of all current projects with their corresponding status   * @return Map with tuples (project, status), mapping projects to their status   * @throws IncorrectPermissionException if the user is not logged in as project manager   */  public Map<String, String> getProjectNamesWithStatus() throws IncorrectPermissionException {    if (getSession().getRole() != Role.PROJECTMANAGER) {      throw new IncorrectPermissionException("You must be logged in with the " + Role.PROJECTMANAGER + " role to call this function");    }    return getTaskManSystem().getProjectNamesWithStatus();  }}